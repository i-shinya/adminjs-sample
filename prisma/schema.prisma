generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model authentication_providers {
  id          Int      @id @default(autoincrement())
  user_id     Int
  provider    String   @db.VarChar(255)
  provider_id String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  users       users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([provider, provider_id])
}

model chat_history {
  id           Int          @id @default(autoincrement())
  session_id   Int
  chat_text    String
  is_owner     Boolean
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  chat_session chat_session @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model chat_session {
  id           Int            @id @default(autoincrement())
  user_id      Int
  chat_uuid    String         @db.VarChar(255)
  session_name String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime?      @db.Timestamp(6)
  chat_history chat_history[]
  users        users          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, chat_uuid])
}

model schema_migrations {
  version BigInt  @id
  dirty   Boolean
}

model users {
  id                       Int                        @id @default(autoincrement())
  email                    String                     @unique @db.VarChar(255)
  display_name             String                     @db.VarChar(100)
  profile                  String                     @default("")
  avatar_url               String?                    @db.VarChar(255)
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  deleted_at               DateTime?                  @db.Timestamp(6)
  authentication_providers authentication_providers[]
  chat_session             chat_session[]
}
